on: pull_request
name: Review
jobs:
  changelog:
    runs-on: ubuntu-latest
    name: Changelog should be updated
    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Git fetch
        run: git fetch

      - name: Check that changelog has been updated.
        run: git diff --exit-code origin/${{ github.base_ref }} -- CHANGELOG.md && exit 1 || exit 0

  test-composer-install:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    name: Validate composer (${{ matrix.php}})
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Composer install
        run: |
          docker network create frontend
          docker compose exec phpfpm composer install
      - name: Composer install (--no-dev)
        run: |
          docker compose exec phpfpm composer install --no-dev

  php-coding-standards:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    name: PHP coding Standards (${{ matrix.php }})
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: php-coding-standards-check
        run: |
          docker network create frontend
          docker compose exec phpfpm composer install --no-interaction
          docker compose exec phpfpm composer coding-standards-check

  php-code-analysis:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    name: PHP coding Standards (${{ matrix.php }})
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: php-coding-standards-check
        run: |
          docker network create frontend
          docker compose exec phpfpm composer install --no-interaction
          docker compose exec phpfpm composer code-analysis

  markdown-coding-standards:
    runs-on: ubuntu-20.04
    name: Markdown coding standards
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: markdown-coding-standards-check
        run: |
          docker network create frontend
          docker compose run --rm node yarn install --no-interaction
          docker compose run --rm node yarn coding-standards-check
